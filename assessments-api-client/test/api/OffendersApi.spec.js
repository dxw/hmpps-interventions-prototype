/*
 * HMPPS Offender Assessment API
 * OASys Data API.
 *
 * OpenAPI spec version: 2020-09-02
 * Contact: feedback@digital.justice.gov.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HmppsOffenderAssessmentApi);
  }
}(this, function(expect, HmppsOffenderAssessmentApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HmppsOffenderAssessmentApi.OffendersApi();
  });

  describe('(package)', function() {
    describe('OffendersApi', function() {
      describe('getOffenderByPkUsingGET', function() {
        it('should call getOffenderByPkUsingGET successfully', function(done) {
          // TODO: uncomment, update parameter values for getOffenderByPkUsingGET call and complete the assertions
          /*
          var identity = "identity_example";
          var identityType = "identityType_example";

          instance.getOffenderByPkUsingGET(identity, identityType).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(HmppsOffenderAssessmentApi.OffenderDto);
            expect(data.bookingNumber).to.be.a('string');
            expect(data.bookingNumber).to.be("123456");
            expect(data.crn).to.be.a('string');
            expect(data.crn).to.be("123456");
            expect(data.croNumber).to.be.a('string');
            expect(data.croNumber).to.be("123456");
            expect(data.familyName).to.be.a('string');
            expect(data.familyName).to.be("Smith");
            expect(data.forename1).to.be.a('string');
            expect(data.forename1).to.be("John");
            expect(data.forename2).to.be.a('string');
            expect(data.forename2).to.be("James");
            expect(data.forename3).to.be.a('string');
            expect(data.forename3).to.be("Andrew");
            expect(data.legacyCmsProbNumber).to.be.a('string');
            expect(data.legacyCmsProbNumber).to.be("123456");
            expect(data.limitedAccessOffender).to.be.a('boolean');
            expect(data.limitedAccessOffender).to.be(true);
            expect(data.mergePncNumber).to.be.a('string');
            expect(data.mergePncNumber).to.be("AB123456");
            expect(data.mergedOasysOffenderId).to.be.a('number');
            expect(data.mergedOasysOffenderId).to.be(123456);
            expect(data.nomisId).to.be.a('string');
            expect(data.nomisId).to.be("123456");
            expect(data.oasysOffenderId).to.be.a('number');
            expect(data.oasysOffenderId).to.be(123456);
            expect(data.pnc).to.be.a('string');
            expect(data.pnc).to.be("AB123456");
            expect(data.riskToOthers).to.be.a('string');
            expect(data.riskToOthers).to.be("High");
            expect(data.riskToSelf).to.be.a('string');
            expect(data.riskToSelf).to.be("Low");

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
