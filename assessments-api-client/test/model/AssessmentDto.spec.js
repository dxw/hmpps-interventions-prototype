/*
 * HMPPS Offender Assessment API
 * OASys Data API.
 *
 * OpenAPI spec version: 2020-09-02
 * Contact: feedback@digital.justice.gov.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HmppsOffenderAssessmentApi);
  }
}(this, function(expect, HmppsOffenderAssessmentApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('AssessmentDto', function() {
      beforeEach(function() {
        instance = new HmppsOffenderAssessmentApi.AssessmentDto();
      });

      it('should create an instance of AssessmentDto', function() {
        // TODO: update the code to test AssessmentDto
        expect(instance).to.be.a(HmppsOffenderAssessmentApi.AssessmentDto);
      });

      it('should have the property assessmentId (base name: "assessmentId")', function() {
        // TODO: update the code to test the property assessmentId
        expect(instance).to.have.property('assessmentId');
        // expect(instance.assessmentId).to.be(expectedValueLiteral);
      });

      it('should have the property assessmentStatus (base name: "assessmentStatus")', function() {
        // TODO: update the code to test the property assessmentStatus
        expect(instance).to.have.property('assessmentStatus');
        // expect(instance.assessmentStatus).to.be(expectedValueLiteral);
      });

      it('should have the property assessmentType (base name: "assessmentType")', function() {
        // TODO: update the code to test the property assessmentType
        expect(instance).to.have.property('assessmentType');
        // expect(instance.assessmentType).to.be(expectedValueLiteral);
      });

      it('should have the property assessorName (base name: "assessorName")', function() {
        // TODO: update the code to test the property assessorName
        expect(instance).to.have.property('assessorName');
        // expect(instance.assessorName).to.be(expectedValueLiteral);
      });

      it('should have the property childSafeguardingIndicated (base name: "childSafeguardingIndicated")', function() {
        // TODO: update the code to test the property childSafeguardingIndicated
        expect(instance).to.have.property('childSafeguardingIndicated');
        // expect(instance.childSafeguardingIndicated).to.be(expectedValueLiteral);
      });

      it('should have the property completedDateTime (base name: "completedDateTime")', function() {
        // TODO: update the code to test the property completedDateTime
        expect(instance).to.have.property('completedDateTime');
        // expect(instance.completedDateTime).to.be(expectedValueLiteral);
      });

      it('should have the property createdDateTime (base name: "createdDateTime")', function() {
        // TODO: update the code to test the property createdDateTime
        expect(instance).to.have.property('createdDateTime');
        // expect(instance.createdDateTime).to.be(expectedValueLiteral);
      });

      it('should have the property historicStatus (base name: "historicStatus")', function() {
        // TODO: update the code to test the property historicStatus
        expect(instance).to.have.property('historicStatus');
        // expect(instance.historicStatus).to.be(expectedValueLiteral);
      });

      it('should have the property layer3SentencePlanNeeds (base name: "layer3SentencePlanNeeds")', function() {
        // TODO: update the code to test the property layer3SentencePlanNeeds
        expect(instance).to.have.property('layer3SentencePlanNeeds');
        // expect(instance.layer3SentencePlanNeeds).to.be(expectedValueLiteral);
      });

      it('should have the property refAssessmentId (base name: "refAssessmentId")', function() {
        // TODO: update the code to test the property refAssessmentId
        expect(instance).to.have.property('refAssessmentId');
        // expect(instance.refAssessmentId).to.be(expectedValueLiteral);
      });

      it('should have the property refAssessmentOasysScoringAlgorithmVersion (base name: "refAssessmentOasysScoringAlgorithmVersion")', function() {
        // TODO: update the code to test the property refAssessmentOasysScoringAlgorithmVersion
        expect(instance).to.have.property('refAssessmentOasysScoringAlgorithmVersion');
        // expect(instance.refAssessmentOasysScoringAlgorithmVersion).to.be(expectedValueLiteral);
      });

      it('should have the property refAssessmentVersionCode (base name: "refAssessmentVersionCode")', function() {
        // TODO: update the code to test the property refAssessmentVersionCode
        expect(instance).to.have.property('refAssessmentVersionCode');
        // expect(instance.refAssessmentVersionCode).to.be(expectedValueLiteral);
      });

      it('should have the property refAssessmentVersionNumber (base name: "refAssessmentVersionNumber")', function() {
        // TODO: update the code to test the property refAssessmentVersionNumber
        expect(instance).to.have.property('refAssessmentVersionNumber');
        // expect(instance.refAssessmentVersionNumber).to.be(expectedValueLiteral);
      });

      it('should have the property sections (base name: "sections")', function() {
        // TODO: update the code to test the property sections
        expect(instance).to.have.property('sections');
        // expect(instance.sections).to.be(expectedValueLiteral);
      });

      it('should have the property sentence (base name: "sentence")', function() {
        // TODO: update the code to test the property sentence
        expect(instance).to.have.property('sentence');
        // expect(instance.sentence).to.be(expectedValueLiteral);
      });

      it('should have the property voidedDateTime (base name: "voidedDateTime")', function() {
        // TODO: update the code to test the property voidedDateTime
        expect(instance).to.have.property('voidedDateTime');
        // expect(instance.voidedDateTime).to.be(expectedValueLiteral);
      });

    });
  });

}));
