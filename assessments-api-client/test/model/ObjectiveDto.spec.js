/*
 * HMPPS Offender Assessment API
 * OASys Data API.
 *
 * OpenAPI spec version: 2020-09-02
 * Contact: feedback@digital.justice.gov.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HmppsOffenderAssessmentApi);
  }
}(this, function(expect, HmppsOffenderAssessmentApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ObjectiveDto', function() {
      beforeEach(function() {
        instance = new HmppsOffenderAssessmentApi.ObjectiveDto();
      });

      it('should create an instance of ObjectiveDto', function() {
        // TODO: update the code to test ObjectiveDto
        expect(instance).to.be.a(HmppsOffenderAssessmentApi.ObjectiveDto);
      });

      it('should have the property createdDate (base name: "createdDate")', function() {
        // TODO: update the code to test the property createdDate
        expect(instance).to.have.property('createdDate');
        // expect(instance.createdDate).to.be(expectedValueLiteral);
      });

      it('should have the property criminogenicNeeds (base name: "criminogenicNeeds")', function() {
        // TODO: update the code to test the property criminogenicNeeds
        expect(instance).to.have.property('criminogenicNeeds');
        // expect(instance.criminogenicNeeds).to.be(expectedValueLiteral);
      });

      it('should have the property howMeasured (base name: "howMeasured")', function() {
        // TODO: update the code to test the property howMeasured
        expect(instance).to.have.property('howMeasured');
        // expect(instance.howMeasured).to.be(expectedValueLiteral);
      });

      it('should have the property interventions (base name: "interventions")', function() {
        // TODO: update the code to test the property interventions
        expect(instance).to.have.property('interventions');
        // expect(instance.interventions).to.be(expectedValueLiteral);
      });

      it('should have the property objectiveCode (base name: "objectiveCode")', function() {
        // TODO: update the code to test the property objectiveCode
        expect(instance).to.have.property('objectiveCode');
        // expect(instance.objectiveCode).to.be(expectedValueLiteral);
      });

      it('should have the property objectiveComment (base name: "objectiveComment")', function() {
        // TODO: update the code to test the property objectiveComment
        expect(instance).to.have.property('objectiveComment');
        // expect(instance.objectiveComment).to.be(expectedValueLiteral);
      });

      it('should have the property objectiveDescription (base name: "objectiveDescription")', function() {
        // TODO: update the code to test the property objectiveDescription
        expect(instance).to.have.property('objectiveDescription');
        // expect(instance.objectiveDescription).to.be(expectedValueLiteral);
      });

      it('should have the property objectiveHeading (base name: "objectiveHeading")', function() {
        // TODO: update the code to test the property objectiveHeading
        expect(instance).to.have.property('objectiveHeading');
        // expect(instance.objectiveHeading).to.be(expectedValueLiteral);
      });

      it('should have the property objectiveMeasure (base name: "objectiveMeasure")', function() {
        // TODO: update the code to test the property objectiveMeasure
        expect(instance).to.have.property('objectiveMeasure');
        // expect(instance.objectiveMeasure).to.be(expectedValueLiteral);
      });

      it('should have the property objectiveType (base name: "objectiveType")', function() {
        // TODO: update the code to test the property objectiveType
        expect(instance).to.have.property('objectiveType');
        // expect(instance.objectiveType).to.be(expectedValueLiteral);
      });

    });
  });

}));
