/*
 * HMPPS Offender Assessment API
 * OASys Data API.
 *
 * OpenAPI spec version: 2020-09-02
 * Contact: feedback@digital.justice.gov.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HmppsOffenderAssessmentApi);
  }
}(this, function(expect, HmppsOffenderAssessmentApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('AnswerDto', function() {
      beforeEach(function() {
        instance = new HmppsOffenderAssessmentApi.AnswerDto();
      });

      it('should create an instance of AnswerDto', function() {
        // TODO: update the code to test AnswerDto
        expect(instance).to.be.a(HmppsOffenderAssessmentApi.AnswerDto);
      });

      it('should have the property displayOrder (base name: "displayOrder")', function() {
        // TODO: update the code to test the property displayOrder
        expect(instance).to.have.property('displayOrder');
        // expect(instance.displayOrder).to.be(expectedValueLiteral);
      });

      it('should have the property freeFormText (base name: "freeFormText")', function() {
        // TODO: update the code to test the property freeFormText
        expect(instance).to.have.property('freeFormText');
        // expect(instance.freeFormText).to.be(expectedValueLiteral);
      });

      it('should have the property oasysAnswerId (base name: "oasysAnswerId")', function() {
        // TODO: update the code to test the property oasysAnswerId
        expect(instance).to.have.property('oasysAnswerId');
        // expect(instance.oasysAnswerId).to.be(expectedValueLiteral);
      });

      it('should have the property ogpScore (base name: "ogpScore")', function() {
        // TODO: update the code to test the property ogpScore
        expect(instance).to.have.property('ogpScore');
        // expect(instance.ogpScore).to.be(expectedValueLiteral);
      });

      it('should have the property ovpScore (base name: "ovpScore")', function() {
        // TODO: update the code to test the property ovpScore
        expect(instance).to.have.property('ovpScore');
        // expect(instance.ovpScore).to.be(expectedValueLiteral);
      });

      it('should have the property qaRawScore (base name: "qaRawScore")', function() {
        // TODO: update the code to test the property qaRawScore
        expect(instance).to.have.property('qaRawScore');
        // expect(instance.qaRawScore).to.be(expectedValueLiteral);
      });

      it('should have the property refAnswerCode (base name: "refAnswerCode")', function() {
        // TODO: update the code to test the property refAnswerCode
        expect(instance).to.have.property('refAnswerCode');
        // expect(instance.refAnswerCode).to.be(expectedValueLiteral);
      });

      it('should have the property refAnswerId (base name: "refAnswerId")', function() {
        // TODO: update the code to test the property refAnswerId
        expect(instance).to.have.property('refAnswerId');
        // expect(instance.refAnswerId).to.be(expectedValueLiteral);
      });

      it('should have the property staticText (base name: "staticText")', function() {
        // TODO: update the code to test the property staticText
        expect(instance).to.have.property('staticText');
        // expect(instance.staticText).to.be(expectedValueLiteral);
      });

    });
  });

}));
