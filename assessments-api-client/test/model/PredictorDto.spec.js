/*
 * HMPPS Offender Assessment API
 * OASys Data API.
 *
 * OpenAPI spec version: 2020-09-02
 * Contact: feedback@digital.justice.gov.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HmppsOffenderAssessmentApi);
  }
}(this, function(expect, HmppsOffenderAssessmentApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('PredictorDto', function() {
      beforeEach(function() {
        instance = new HmppsOffenderAssessmentApi.PredictorDto();
      });

      it('should create an instance of PredictorDto', function() {
        // TODO: update the code to test PredictorDto
        expect(instance).to.be.a(HmppsOffenderAssessmentApi.PredictorDto);
      });

      it('should have the property assessmentCompleted (base name: "assessmentCompleted")', function() {
        // TODO: update the code to test the property assessmentCompleted
        expect(instance).to.have.property('assessmentCompleted');
        // expect(instance.assessmentCompleted).to.be(expectedValueLiteral);
      });

      it('should have the property completedDate (base name: "completedDate")', function() {
        // TODO: update the code to test the property completedDate
        expect(instance).to.have.property('completedDate');
        // expect(instance.completedDate).to.be(expectedValueLiteral);
      });

      it('should have the property oasysSetId (base name: "oasysSetId")', function() {
        // TODO: update the code to test the property oasysSetId
        expect(instance).to.have.property('oasysSetId');
        // expect(instance.oasysSetId).to.be(expectedValueLiteral);
      });

      it('should have the property ogp (base name: "ogp")', function() {
        // TODO: update the code to test the property ogp
        expect(instance).to.have.property('ogp');
        // expect(instance.ogp).to.be(expectedValueLiteral);
      });

      it('should have the property ogr3 (base name: "ogr3")', function() {
        // TODO: update the code to test the property ogr3
        expect(instance).to.have.property('ogr3');
        // expect(instance.ogr3).to.be(expectedValueLiteral);
      });

      it('should have the property otherRisk (base name: "otherRisk")', function() {
        // TODO: update the code to test the property otherRisk
        expect(instance).to.have.property('otherRisk');
        // expect(instance.otherRisk).to.be(expectedValueLiteral);
      });

      it('should have the property ovp (base name: "ovp")', function() {
        // TODO: update the code to test the property ovp
        expect(instance).to.have.property('ovp');
        // expect(instance.ovp).to.be(expectedValueLiteral);
      });

      it('should have the property refAssessmentId (base name: "refAssessmentId")', function() {
        // TODO: update the code to test the property refAssessmentId
        expect(instance).to.have.property('refAssessmentId');
        // expect(instance.refAssessmentId).to.be(expectedValueLiteral);
      });

      it('should have the property refAssessmentVersionCode (base name: "refAssessmentVersionCode")', function() {
        // TODO: update the code to test the property refAssessmentVersionCode
        expect(instance).to.have.property('refAssessmentVersionCode');
        // expect(instance.refAssessmentVersionCode).to.be(expectedValueLiteral);
      });

      it('should have the property refAssessmentVersionNumber (base name: "refAssessmentVersionNumber")', function() {
        // TODO: update the code to test the property refAssessmentVersionNumber
        expect(instance).to.have.property('refAssessmentVersionNumber');
        // expect(instance.refAssessmentVersionNumber).to.be(expectedValueLiteral);
      });

      it('should have the property voidedDateTime (base name: "voidedDateTime")', function() {
        // TODO: update the code to test the property voidedDateTime
        expect(instance).to.have.property('voidedDateTime');
        // expect(instance.voidedDateTime).to.be(expectedValueLiteral);
      });

    });
  });

}));
