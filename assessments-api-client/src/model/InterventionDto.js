/*
 * HMPPS Offender Assessment API
 * OASys Data API.
 *
 * OpenAPI spec version: 2020-09-02
 * Contact: feedback@digital.justice.gov.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InterventionMeasureDto', 'model/RefElementDto', 'model/WhoDoingWorkDto'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InterventionMeasureDto'), require('./RefElementDto'), require('./WhoDoingWorkDto'));
  } else {
    // Browser globals (root is window)
    if (!root.HmppsOffenderAssessmentApi) {
      root.HmppsOffenderAssessmentApi = {};
    }
    root.HmppsOffenderAssessmentApi.InterventionDto = factory(root.HmppsOffenderAssessmentApi.ApiClient, root.HmppsOffenderAssessmentApi.InterventionMeasureDto, root.HmppsOffenderAssessmentApi.RefElementDto, root.HmppsOffenderAssessmentApi.WhoDoingWorkDto);
  }
}(this, function(ApiClient, InterventionMeasureDto, RefElementDto, WhoDoingWorkDto) {
  'use strict';

  /**
   * The InterventionDto model module.
   * @module model/InterventionDto
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>InterventionDto</code>.
   * @alias module:model/InterventionDto
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>InterventionDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InterventionDto} obj Optional instance to populate.
   * @return {module:model/InterventionDto} The populated <code>InterventionDto</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('copiedForward'))
        obj.copiedForward = ApiClient.convertToType(data['copiedForward'], 'Boolean');
      if (data.hasOwnProperty('interventionCode'))
        obj.interventionCode = ApiClient.convertToType(data['interventionCode'], 'String');
      if (data.hasOwnProperty('interventionComment'))
        obj.interventionComment = ApiClient.convertToType(data['interventionComment'], 'String');
      if (data.hasOwnProperty('interventionDescription'))
        obj.interventionDescription = ApiClient.convertToType(data['interventionDescription'], 'String');
      if (data.hasOwnProperty('interventionMeasure'))
        obj.interventionMeasure = InterventionMeasureDto.constructFromObject(data['interventionMeasure']);
      if (data.hasOwnProperty('timescale'))
        obj.timescale = RefElementDto.constructFromObject(data['timescale']);
      if (data.hasOwnProperty('whoDoingWork'))
        obj.whoDoingWork = ApiClient.convertToType(data['whoDoingWork'], [WhoDoingWorkDto]);
    }
    return obj;
  }

  /**
   * @member {Boolean} copiedForward
   */
  exports.prototype.copiedForward = undefined;

  /**
   * @member {String} interventionCode
   */
  exports.prototype.interventionCode = undefined;

  /**
   * @member {String} interventionComment
   */
  exports.prototype.interventionComment = undefined;

  /**
   * @member {String} interventionDescription
   */
  exports.prototype.interventionDescription = undefined;

  /**
   * @member {module:model/InterventionMeasureDto} interventionMeasure
   */
  exports.prototype.interventionMeasure = undefined;

  /**
   * @member {module:model/RefElementDto} timescale
   */
  exports.prototype.timescale = undefined;

  /**
   * @member {Array.<module:model/WhoDoingWorkDto>} whoDoingWork
   */
  exports.prototype.whoDoingWork = undefined;

  return exports;

}));
